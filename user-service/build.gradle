buildscript{
    ext {
        springBootVersion = "2.7.2"
        queryDslVersion = "5.0.0"
    }
    repositories {
        mavenCentral()
        maven{ 
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        // classpath "io.spring.gradle:dependency-management-plugin:1.0.12.RELEASE"
    }
}


plugins {
    id 'java'
    id 'maven-publish'
    id 'war'
    id 'io.franzbecker.gradle-lombok' version '5.0.0'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}


querydsl {
    library = 'com.querydsl:querydsl-apt:5.0.0'
    jpa = true
}

configurations {
    querydsl.extendsFrom implementation
    // , compileClasspath
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

project.afterEvaluate {
    project.tasks.compileQuerydsl.options.compilerArgs = [
            "-proc:only",
            "-processor", project.querydsl.processors() +
                    ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
    ]
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/querydsl']
        }
    }
}

// compileJava {
//   options.compilerArgs += [
//     '-Aquerydsl.excludedPackages=com.thomsonreuters.domainmodel.eventhistory'
//   ]
// }

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=com.querydsl.core.annotations.Generated'
}

dependencies {
    implementation 'org.hibernate:hibernate-core:5.6.9.Final'
    implementation 'org.hibernate:hibernate-entitymanager:5.6.9.Final'
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'org.json:json:20220320'
    implementation 'org.apache.poi:poi:5.2.2'
    implementation 'com.okta.jwt:okta-jwt-verifier-impl:0.5.1'
    implementation 'com.okta.jwt:okta-jwt-verifier:0.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
    implementation 'org.modelmapper:modelmapper:2.3.7'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    // implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '3.1.0'
    // compileOnly group: 'javax', name: 'javaee-api', version: '8.0.1'
    runtimeOnly 'mysql:mysql-connector-java:8.0.28'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.6.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.11.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.2'
    providedCompile 'com.querydsl:querydsl-apt:5.0.0'
    providedCompile 'org.springframework.boot:spring-boot-starter-tomcat:2.7.2'
    // annotationProcessor('javax.annotation:javax.annotation-api')
    providedCompile 'org.projectlombok:lombok:1.18.22'
    compileOnly('org.projectlombok:lombok:1.18.22')
    // annotationProcessor('jakarta.persistence:jakarta.persistence-api:3.0.0')
    // annotationProcessor('jakarta.annotation:jakarta.annotation-api:2.1.1')
    annotationProcessor('com.querydsl:querydsl-apt:5.0.0:jpa')
    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.2'
    annotationProcessor('org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final')
    annotationProcessor('javax.annotation:javax.annotation-api:1.3.2')
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
}

group = 'com.springboot'
version = '0.0.1-SNAPSHOT'
description = 'demo'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
